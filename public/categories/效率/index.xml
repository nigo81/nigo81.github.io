<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>效率 - 分类 - 逆行的狗</title>
        <link>https://nigo81.github.io/categories/%E6%95%88%E7%8E%87/</link>
        <description>效率 - 分类 - 逆行的狗</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>tujiabing81@163.com (nigo)</managingEditor>
            <webMaster>tujiabing81@163.com (nigo)</webMaster><lastBuildDate>Fri, 10 Feb 2023 17:51:00 &#43;0800</lastBuildDate><atom:link href="https://nigo81.github.io/categories/%E6%95%88%E7%8E%87/" rel="self" type="application/rss+xml" /><item>
    <title>让人上瘾的emacs</title>
    <link>https://nigo81.github.io/posts/20230205232142-%E8%AE%A9%E4%BA%BA%E4%B8%8A%E7%98%BE%E7%9A%84emacs/</link>
    <pubDate>Fri, 10 Feb 2023 17:51:00 &#43;0800</pubDate>
    <author>nigo</author>
    <guid>https://nigo81.github.io/posts/20230205232142-%E8%AE%A9%E4%BA%BA%E4%B8%8A%E7%98%BE%E7%9A%84emacs/</guid>
    <description><![CDATA[<p>作为重度知识使用者，我使用过很多笔记软件。</p>
<p>包括为知笔记、印象笔记、 gingko 、vimwiki。</p>
<p>其中停留在 vimwiki 的时间比较长，它是编辑器之神 vim 的一个插件，用它积累了很多学习、工作的笔记，全部是本地的 makrdown 文件，共享盘同步。</p>
<p>从去年 8 月开始，用上了 emacs ，这个被称为神之编辑器的东西，确实让人上瘾，几乎可以用它来做任何事情。</p>
<figure>
</figure>

<p>这个编辑器不仅属于程序员，其实很多国外学术圈的人也很多人使用。</p>
<p>目前我使用它记录笔记、工作安排、 GTD 、写 Python 、写公众号、听收音机、发邮件、读 RSS 。</p>
<h2 id="读书笔记">读书笔记</h2>
<figure>
</figure>

<p>在看书时，可以方便地一边记笔记、一边看 PDF ，可以全部使用键盘。</p>
<figure>
</figure>

<p>使用<code>dictionary-overlay</code>插件，可以在阅读英文时，遇到不懂的单词可以直接标注，后面再次出现也会显示中文。</p>
<figure>
</figure>

<p>使用<code>popweb</code>插件可以直接实时查有道词典。</p>
<p>搭配着这两个插件，基本上我也不怕读英文文档了。</p>
<h2 id="org-mode">org-mode</h2>
<p>emacs最强大的就是 org-mode ，可以方便组织文字、图片、链接</p>
<figure>
</figure>

<p>每一层级可以方便的折叠，展开，非常有逻辑性。</p>
<p>同时，对于学习代码来说，他还可以直接运行，因此我们可以进行文学编程。</p>
<p>只需要在代码块中按下<code>C-c C-c</code>就可以将代码结果运行出来。</p>
<figure>
</figure>

<p>如果你喜欢双链笔记，可以使用<code>org-roam</code>插件。</p>
<h2 id="编写代码">编写代码</h2>
<p>搭配上<code>lsp-bridge</code>插件，可以瞬间变成一个成熟的 IDE ，尤其是如果平时要写多个语言，那么在一个编辑中写书，更高效。</p>
<p>毕竟快捷键都是一套自己熟悉的。</p>
<figure>
</figure>

<h2 id="gtd">GTD</h2>
<p><code>org-agenda</code> 是非常强大的任务管理插件。</p>
<p>在工作时，如果有一项任务来临，按下<code>C-c c</code>就可以弹出记录。</p>
<figure>
</figure>

<p>输入待办事项、开始时间或结束时间、重要程度</p>
<figure>
</figure>

<p>也可以使用番茄钟等对任务的时间消耗进行记录。</p>
<h2 id="rss">RSS</h2>
<p>可以订阅自己喜欢的一些博客文章或者播客、 B 站关注的 UP 主。</p>
<figure>
</figure>

<h2 id="邮件">邮件</h2>
<p>最近也把邮件客户端省了，打开 emacs 就可以查阅和发送邮件。</p>
<figure>
</figure>

<p>对联系人也是可以直接补全的。</p>
<figure>
</figure>

<p>当收到邮件时，还可以和前面<code>org-agenda</code>结合将邮件做一项待办任务，后面再进行处理。</p>
<h2 id="结语">结语</h2>
<p>emacs是一个存在了 40 多年的自由软件，到现在也还具有强大的生命力，可以预见未来的 40 年也将继续存在。</p>
<p>它是神之编辑器，在 windows 、Linux、 Mac 上都可以使用。</p>
<p>如果感兴趣可以看下陈斌写的《一年成为 Emacs 高手 (像神一样使用编辑器)》</p>
<p><a href="https://github.com/redguardtoo/mastering-emacs-in-one-year-guide/blob/master/guide-zh.org" target="_blank" rel="noopener noreffer ">https://github.com/redguardtoo/mastering-emacs-in-one-year-guide/blob/master/guide-zh.org</a></p>
<p>刚开始上手配置比较困难，可以直接使用他的配置文件：</p>
<p><a href="https://github.com/redguardtoo/emacs.d" target="_blank" rel="noopener noreffer ">https://github.com/redguardtoo/emacs.d</a></p>
<p>它的配置文件应该是支持 windows 、mac、 linux 的。</p>
<p>不过后面自己熟悉后，还是可以折腾一份自己的配置，毕竟自己能掌控的才是最好的。</p>
]]></description>
</item>
<item>
    <title>批量改变文件最后修改时间</title>
    <link>https://nigo81.github.io/posts/20220814214636-%E6%89%B9%E9%87%8F%E6%94%B9%E5%8F%98%E6%96%87%E4%BB%B6%E6%9C%80%E5%90%8E%E4%BF%AE%E6%94%B9%E6%97%B6%E9%97%B4/</link>
    <pubDate>Sun, 14 Aug 2022 00:00:00 &#43;0000</pubDate>
    <author>nigo</author>
    <guid>https://nigo81.github.io/posts/20220814214636-%E6%89%B9%E9%87%8F%E6%94%B9%E5%8F%98%E6%96%87%E4%BB%B6%E6%9C%80%E5%90%8E%E4%BF%AE%E6%94%B9%E6%97%B6%E9%97%B4/</guid>
    <description><![CDATA[<p>有网友问，怎么批量修改文件最后的修改日期。</p>
<p>比如， excel 文件、 word 文件等。</p>
<p>当然我们先将电脑日期设置成以前的某个日期，然后一个一个打开文件后，修改下，再保存。这样可以完成日期的更换。</p>
<p>今天我们用 python 来实现文件修改日期的批量替换。</p>
<figure>
</figure>

<p>比如在=/home/nigo/tmp/test=文件夹下有一些文件，最后修改日期是=2022-07-19=。</p>
<p>我们只需要做两步：</p>
<ol>
<li>循环获取该文件夹所有文件路径。</li>
<li>修改文件日期</li>
</ol>
<p>我们先看修改文件日期：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">os</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">change_file_date</span><span class="p">(</span><span class="n">path</span><span class="p">,</span> <span class="n">atime</span><span class="p">,</span> <span class="n">mtime</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;改变文件修改日期和访问日期&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="n">info</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">stat</span><span class="p">(</span><span class="n">path</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">os</span><span class="o">.</span><span class="n">utime</span><span class="p">(</span><span class="n">path</span><span class="p">,</span> <span class="p">(</span><span class="n">atime</span><span class="p">,</span> <span class="n">mtime</span><span class="p">))</span></span></span></code></pre></div>
<p>我们只需要用<code>os.utime</code>函数就可以将文件的访问日期和修改日期分别改变为<code>atime</code>和 <code>mtime</code> （时间戳数字）。</p>
<p>完整代码如下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">os</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">datetime</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">change_file_date</span><span class="p">(</span><span class="n">path</span><span class="p">,</span> <span class="n">atime</span><span class="p">,</span> <span class="n">mtime</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;改变文件修改日期和访问日期&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="n">info</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">stat</span><span class="p">(</span><span class="n">path</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">os</span><span class="o">.</span><span class="n">utime</span><span class="p">(</span><span class="n">path</span><span class="p">,</span> <span class="p">(</span><span class="n">atime</span><span class="p">,</span> <span class="n">mtime</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">get_file_list</span><span class="p">(</span><span class="nb">dir</span><span class="p">,</span> <span class="n">file_list</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;递归获取文件夹下所有的文件路径&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="n">newdir</span> <span class="o">=</span> <span class="nb">dir</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">isfile</span><span class="p">(</span><span class="nb">dir</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="n">file_list</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="nb">dir</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">elif</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">isdir</span><span class="p">(</span><span class="nb">dir</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="n">s</span> <span class="ow">in</span> <span class="n">os</span><span class="o">.</span><span class="n">listdir</span><span class="p">(</span><span class="nb">dir</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">            <span class="c1">#如果需要忽略某些文件夹，使用以下代码</span>
</span></span><span class="line"><span class="cl">            <span class="c1"># if s == &#34;xxx&#34;:</span>
</span></span><span class="line"><span class="cl">                <span class="c1"># continue</span>
</span></span><span class="line"><span class="cl">            <span class="n">newdir</span><span class="o">=</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="nb">dir</span><span class="p">,</span><span class="n">s</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="n">get_file_list</span><span class="p">(</span><span class="n">newdir</span><span class="p">,</span> <span class="n">file_list</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">file_list</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">&#34;__main__&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># 需要修改的文件所在的文件夹</span>
</span></span><span class="line"><span class="cl">    <span class="n">modify_directory</span> <span class="o">=</span> <span class="s1">&#39;/home/nigo/tmp/test&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># 需要设置成的修改时间：年,月,日,时,分,秒</span>
</span></span><span class="line"><span class="cl">    <span class="n">modify_time</span> <span class="o">=</span> <span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="p">(</span><span class="mi">2022</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">18</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">31</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># 将时期转化为时间戳</span>
</span></span><span class="line"><span class="cl">    <span class="n">mtime</span> <span class="o">=</span> <span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="o">.</span><span class="n">timestamp</span><span class="p">(</span><span class="n">modify_time</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># 获取指定文件夹下的所有文件路径</span>
</span></span><span class="line"><span class="cl">    <span class="n">paths</span> <span class="o">=</span> <span class="n">get_file_list</span><span class="p">(</span><span class="n">modify_directory</span><span class="p">,</span> <span class="p">[])</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># 循环所有文件</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">path</span> <span class="ow">in</span> <span class="n">paths</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># 修改文件的访问时间和修改时间</span>
</span></span><span class="line"><span class="cl">        <span class="n">change_file_date</span><span class="p">(</span><span class="n">path</span><span class="p">,</span> <span class="n">mtime</span><span class="p">,</span> <span class="n">mtime</span><span class="p">)</span></span></span></code></pre></div>
<p>我们执行代码将<code>/home/nigo/tmp/test</code>文件夹下的所有文件修改日期改变为<code>2022-04-05 18:20:31</code>。</p>
<figure>
</figure>

<p>可以看到所有文件的修改日期已全部批量修改。</p>
<p>当然你会 VBA 的话，也可以使用 VBA 实现，只是用 Python 更快速一点。</p>
]]></description>
</item>
<item>
    <title>上交所警示函批量下载</title>
    <link>https://nigo81.github.io/posts/20220814220542-%E4%B8%8A%E4%BA%A4%E6%89%80%E8%AD%A6%E7%A4%BA%E5%87%BD%E6%89%B9%E9%87%8F%E4%B8%8B%E8%BD%BD/</link>
    <pubDate>Sun, 14 Aug 2022 00:00:00 &#43;0000</pubDate>
    <author>nigo</author>
    <guid>https://nigo81.github.io/posts/20220814220542-%E4%B8%8A%E4%BA%A4%E6%89%80%E8%AD%A6%E7%A4%BA%E5%87%BD%E6%89%B9%E9%87%8F%E4%B8%8B%E8%BD%BD/</guid>
    <description><![CDATA[<blockquote>
<p>陈版主答疑文章使用的爬虫失效了，暂时没有更新，这周我抽时间更新下，再为大家每天推送。</p>
</blockquote>
<p>昨天文章有朋友留言让分享下上交所警示函下载的工具，</p>
<p>虽然写这个代码不难，但还是可以和大家分享下思路。</p>
<figure>
</figure>

<h2 id="任务拆解">任务拆解</h2>
<p>当我们想做一个工具的时候，首先需要梳理出<strong>逻辑</strong>。</p>
<p>也就是先手工操作一遍，把一个大任务拆分成可执行的小任务。</p>
<h3 id="大目标">大目标</h3>
<p>比如，我们的目标是登录上交所网站，输入“警示函”关键字，点击查询，</p>
<p>点击一个列表页，将显示的 PDF 下载下来，然后复制其中的文字到我们保存的文件中。</p>
<p>这个流程有好几步，很多人刚开始学习的时候不太意识到这是一个大目标，</p>
<p>你直接对别人说：“哎，把最近几年上交所警示函内容帮我整理出来。”</p>
<p>别人是茫然的，不知道怎么做。</p>
<p>同样的，你自己也不知道，你可能只能在浏览器上搜索：“批量下载上交所警示函”</p>
<p>如果运气好，别人做过，可能会有现成的轮子，否则，你就又卡住了。</p>
<p>要知道，对于一个大目标我们是很难实际落地执行的。</p>
<h3 id="小任务">小任务</h3>
<p>那么,要想实现我们的大目标，最好的方法就是任务拆解。</p>
<ol>
<li>获取网页信息（包括 PDF 下载链接)</li>
<li>下载 PDF 文件</li>
<li>解析 PDF 文件</li>
<li>保存数据</li>
</ol>
<p>当我们能把任务进行拆解后，难度就自然极度下降了，</p>
<p>我们现在只需要针对这 4 个问题写函数完成。</p>
<p>我们以最简单的解析 PDF 文件为例，</p>
<p>啊？为什么这个是最简单的？因为之前在一篇文章中学过，用 <code>pdfplumber</code>
库解析 PDF 。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">pdfplumber</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">extract_pdf</span><span class="p">(</span><span class="n">path</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;提取pdf文字内容&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="k">with</span> <span class="n">pdfplumber</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="n">path</span><span class="p">)</span> <span class="k">as</span> <span class="n">pdf</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">pages</span> <span class="o">=</span> <span class="n">pdf</span><span class="o">.</span><span class="n">pages</span>
</span></span><span class="line"><span class="cl">        <span class="n">text</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">page</span><span class="o">.</span><span class="n">extract_text</span><span class="p">()</span> <span class="k">for</span> <span class="n">page</span> <span class="ow">in</span> <span class="n">pages</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">text</span></span></span></code></pre></div>
<p>你看 4 个问题，我们就解决了一个。简单吧？</p>
<h3 id="周而复始">周而复始</h3>
<p>需要注意的是，上交所给的 PDF 绝大部分是文本的，一小部分的是扫描图片的。</p>
<p>这个代码只能解析文本的 PDF ，如果你想完全解决，那么我们又可以任务拆解的方法，</p>
<p>将<code>3.解析PDF</code>文件分解为：</p>
<p>3.1 解析文字类PDF</p>
<p>3.2 解析扫描类PDF</p>
<p>啊？扫描类的 PDF 文件我怎么解析呢？要么你在浏览器上搜索下有没有这个解决办法。</p>
<p>要么我们再进一步拆解，我们可以把扫描的 PDF 保存为一张张图片,再用 OCR 去识别图片：</p>
<p>3.2.1 PDF拆分成图片</p>
<p>3.2.2 OCR识别图片为文字</p>
<p>每一个如果不会，就去搜索解决，搜索没有直接答案的，就看能不能拆成更小的任务，</p>
<p>循环往复，直到找到解决问题的方法。</p>
<h2 id="搜索问题及笔记记录">搜索问题及笔记记录</h2>
<p>通过上面的步骤，我们能把一个复杂任务转换为简单任务。</p>
<p>这也是数学中的化归思想。</p>
<p>这些简单任务，有些我们可能已经会了，有些可能不会。</p>
<p>对于不会的，我们就需要去<code>检索</code>了，也就是问 <strong>度娘。</strong></p>
<p>这个真就是熟能生巧了，查得多了，就有技巧了，基本小的问题你都能解决。</p>
<p>当你查到后，一定要把<code>有价值</code>的问题，记录到你的笔记中，</p>
<p>你看上次我们在“ python 提取关键审计事项”的文章中用到的<code>pdfplumber</code>，</p>
<p>今天又用上了。</p>
<p>查一次你可能会忘记，当你记录下来，下次遇到你就节约了检索的时间，</p>
<p>多遇到几次，你就彻底掌握了，这个就是知识习得的过程。</p>
<h2 id="完整代码">完整代码</h2>
<p>其实代码并不重要，有需要的可以自己拿来练习、练习。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">pdfplumber</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">requests</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">urllib.parse</span> <span class="kn">import</span> <span class="n">urljoin</span><span class="p">,</span><span class="n">urlencode</span><span class="p">,</span><span class="n">quote</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">os</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">pymysql</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">time</span> <span class="k">as</span> <span class="nn">ttime</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">extract_pdf</span><span class="p">(</span><span class="n">path</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;提取pdf文字内容&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="k">with</span> <span class="n">pdfplumber</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="n">path</span><span class="p">)</span> <span class="k">as</span> <span class="n">pdf</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">pages</span> <span class="o">=</span> <span class="n">pdf</span><span class="o">.</span><span class="n">pages</span>
</span></span><span class="line"><span class="cl">        <span class="n">text</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">page</span><span class="o">.</span><span class="n">extract_text</span><span class="p">()</span> <span class="k">for</span> <span class="n">page</span> <span class="ow">in</span> <span class="n">pages</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">text</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">download_pdf</span><span class="p">(</span><span class="n">url</span><span class="p">,</span><span class="n">path</span><span class="p">,</span><span class="n">pdf_name</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;下载PDF文件&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="n">file_path</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">path</span><span class="p">,</span><span class="n">pdf_name</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="n">file_path</span><span class="p">)</span><span class="o">==</span><span class="kc">False</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="n">path</span><span class="p">)</span><span class="o">==</span><span class="kc">False</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">os</span><span class="o">.</span><span class="n">makedirs</span><span class="p">(</span><span class="n">path</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">r</span><span class="o">=</span><span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">file_path</span><span class="p">,</span><span class="s1">&#39;wb&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">r</span><span class="o">.</span><span class="n">content</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">get_download_urls</span><span class="p">(</span><span class="n">keyword</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;获取列表信息及PDF下载链接&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="n">page</span> <span class="o">=</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">    <span class="n">url</span> <span class="o">=</span> <span class="s1">&#39;http://query.sse.com.cn/search/getSearchResult.do?search=qwjs&amp;jsonCallBack=&amp;searchword=T_L+CTITLE+T_E+T_L&#39;</span> <span class="o">+</span> <span class="n">quote</span><span class="p">(</span><span class="n">keyword</span><span class="p">)</span> <span class="o">+</span><span class="s1">&#39;+T_R+and+cchannelcode+T_E+T_L0T_D8311T_D8321T_D8348T_D8349T_D8365T_D8703T_D8828T_D8834T_D9856T_D9860T_D9862T_D9888T_D9889T_D9892T_D10004T_D10011T_D10743T_D12002T_D88888888T_RT_R&amp;orderby=-CRELEASETIME&amp;page=</span><span class="si">%s</span><span class="s1">&amp;perpage=10&amp;_=1660204739688&#39;</span> <span class="o">%</span> <span class="n">page</span>
</span></span><span class="line"><span class="cl">    <span class="n">header</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;User-Agent&#39;</span><span class="p">:</span><span class="s1">&#39;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.5060.134 Safari/537.36 Edg/103.0.1264.71&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;Host&#39;</span><span class="p">:</span><span class="s1">&#39;query.sse.com.cn&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;Referer&#39;</span><span class="p">:</span><span class="s1">&#39;http://www.sse.com.cn/&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span><span class="p">,</span><span class="n">headers</span><span class="o">=</span><span class="n">header</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">json_str</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="n">json</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="n">total_page</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">json_str</span><span class="p">[</span><span class="s1">&#39;countPage&#39;</span><span class="p">])</span>
</span></span><span class="line"><span class="cl">    <span class="n">infos</span> <span class="o">=</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">page</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">total_page</span><span class="o">+</span><span class="mi">1</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="n">ttime</span><span class="o">.</span><span class="n">sleep</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span> <span class="c1"># 暂停的秒数，避免频繁调用</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;获取第</span><span class="si">%s</span><span class="s1">页信息，共</span><span class="si">%s</span><span class="s1">页&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="n">page</span><span class="p">,</span><span class="n">total_page</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">        <span class="n">url</span> <span class="o">=</span> <span class="s1">&#39;http://query.sse.com.cn/search/getSearchResult.do?search=qwjs&amp;jsonCallBack=&amp;searchword=T_L+CTITLE+T_E+T_L&#39;</span> <span class="o">+</span> <span class="n">quote</span><span class="p">(</span><span class="n">keyword</span><span class="p">)</span> <span class="o">+</span><span class="s1">&#39;+T_R+and+cchannelcode+T_E+T_L0T_D8311T_D8321T_D8348T_D8349T_D8365T_D8703T_D8828T_D8834T_D9856T_D9860T_D9862T_D9888T_D9889T_D9892T_D10004T_D10011T_D10743T_D12002T_D88888888T_RT_R&amp;orderby=-CRELEASETIME&amp;page=</span><span class="si">%s</span><span class="s1">&amp;perpage=10&amp;_=1660204739688&#39;</span> <span class="o">%</span> <span class="n">page</span>
</span></span><span class="line"><span class="cl">        <span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span><span class="p">,</span><span class="n">headers</span><span class="o">=</span><span class="n">header</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">json_str</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="n">json</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="n">row</span> <span class="ow">in</span> <span class="n">json_str</span><span class="p">[</span><span class="s1">&#39;data&#39;</span><span class="p">]:</span>
</span></span><span class="line"><span class="cl">            <span class="n">title</span> <span class="o">=</span> <span class="n">row</span><span class="p">[</span><span class="s1">&#39;CTITLE_TXT&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">            <span class="nb">print</span><span class="p">(</span><span class="n">title</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="n">link</span> <span class="o">=</span> <span class="n">row</span><span class="p">[</span><span class="s1">&#39;CURL&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">            <span class="n">url</span> <span class="o">=</span> <span class="n">urljoin</span><span class="p">(</span><span class="s2">&#34;http://www.sse.com.cn/&#34;</span><span class="p">,</span><span class="n">link</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="n">date</span> <span class="o">=</span> <span class="n">row</span><span class="p">[</span><span class="s1">&#39;CRELEASETIME&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">            <span class="n">time</span> <span class="o">=</span> <span class="n">row</span><span class="p">[</span><span class="s1">&#39;CRELEASETIME2&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">            <span class="n">file_type</span> <span class="o">=</span> <span class="n">row</span><span class="p">[</span><span class="s1">&#39;MIMETYPE&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">            <span class="nb">id</span> <span class="o">=</span> <span class="n">row</span><span class="p">[</span><span class="s1">&#39;DOCID&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">            <span class="n">data</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s1">&#39;title&#39;</span><span class="p">:</span><span class="n">title</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s1">&#39;url&#39;</span><span class="p">:</span><span class="n">url</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s1">&#39;date&#39;</span><span class="p">:</span><span class="n">date</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s1">&#39;time&#39;</span><span class="p">:</span><span class="n">time</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s1">&#39;file_type&#39;</span><span class="p">:</span><span class="n">file_type</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s1">&#39;id&#39;</span><span class="p">:</span><span class="nb">id</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">            <span class="n">infos</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">infos</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">upload_mysql</span><span class="p">(</span><span class="n">connect</span><span class="p">,</span> <span class="n">cursor</span><span class="p">,</span> <span class="n">item</span><span class="p">,</span> <span class="n">table_name</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;上传字典数据到mysql数据库&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="n">keys</span> <span class="o">=</span> <span class="s1">&#39;,&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">item</span><span class="o">.</span><span class="n">keys</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">    <span class="n">values</span> <span class="o">=</span> <span class="s1">&#39;,&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">([</span><span class="s1">&#39;</span><span class="si">%s</span><span class="s1">&#39;</span><span class="p">]</span><span class="o">*</span><span class="nb">len</span><span class="p">(</span><span class="n">item</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">    <span class="n">sql</span> <span class="o">=</span> <span class="s1">&#39;insert into </span><span class="si">%s</span><span class="s1">(</span><span class="si">%s</span><span class="s1">) values(</span><span class="si">%s</span><span class="s1">)  on duplicate key update &#39;</span> <span class="o">%</span> <span class="p">(</span>
</span></span><span class="line"><span class="cl">        <span class="n">table_name</span><span class="p">,</span> <span class="n">keys</span><span class="p">,</span> <span class="n">values</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">update</span> <span class="o">=</span> <span class="s1">&#39;,&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">([</span><span class="n">key</span> <span class="o">+</span> <span class="s1">&#39;=</span><span class="si">%s</span><span class="s1">&#39;</span> <span class="k">for</span> <span class="n">key</span> <span class="ow">in</span> <span class="n">item</span><span class="p">])</span>
</span></span><span class="line"><span class="cl">    <span class="n">sql</span> <span class="o">+=</span> <span class="n">update</span>
</span></span><span class="line"><span class="cl">    <span class="k">try</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">cursor</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="n">sql</span><span class="p">,</span> <span class="nb">tuple</span><span class="p">(</span><span class="n">item</span><span class="o">.</span><span class="n">values</span><span class="p">())</span><span class="o">*</span><span class="mi">2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">connect</span><span class="o">.</span><span class="n">commit</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="k">except</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">connect</span><span class="o">.</span><span class="n">rollback</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s1">&#39;__main__&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># 使用数据库，如果不将解析的数据传到数据库，可以注释掉,注意修改数据库账号、密码信息</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># connect = pymysql.connect(</span>
</span></span><span class="line"><span class="cl">    <span class="c1">#     host = &#39;127.0.0.1&#39;, db = &#39;book&#39;, user = &#39;root&#39;,</span>
</span></span><span class="line"><span class="cl">    <span class="c1">#     passwd = &#39;xxxx&#39;, charset = &#39;utf8&#39;)</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># cursor = connect.cursor()</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># table_name = &#39;chufa&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># 使用数据库，如果不将解析的数据传到数据库，可以注释掉</span>
</span></span><span class="line"><span class="cl">    <span class="n">directory</span> <span class="o">=</span> <span class="s1">&#39;./pdf&#39;</span> <span class="c1"># 下载的pdf文件保存文件夹路径</span>
</span></span><span class="line"><span class="cl">    <span class="n">infos</span> <span class="o">=</span> <span class="n">get_download_urls</span><span class="p">(</span><span class="s1">&#39;警示函&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">infos</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">df</span><span class="o">.</span><span class="n">to_excel</span><span class="p">(</span><span class="s1">&#39;下载链接.xlsx&#39;</span><span class="p">,</span><span class="n">index</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span> <span class="c1"># 将获取到的列表信息保存到本地</span>
</span></span><span class="line"><span class="cl">    <span class="n">output</span> <span class="o">=</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">row</span> <span class="ow">in</span> <span class="n">infos</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">url</span> <span class="o">=</span> <span class="n">row</span><span class="p">[</span><span class="s1">&#39;url&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="n">pdf_name</span> <span class="o">=</span> <span class="n">row</span><span class="p">[</span><span class="s1">&#39;title&#39;</span><span class="p">]</span> <span class="o">+</span> <span class="s1">&#39;.&#39;</span> <span class="o">+</span> <span class="n">row</span><span class="p">[</span><span class="s1">&#39;file_type&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="k">try</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">download_pdf</span><span class="p">(</span><span class="n">url</span><span class="p">,</span><span class="n">directory</span><span class="p">,</span><span class="n">pdf_name</span><span class="p">)</span> <span class="c1"># 下载PDF</span>
</span></span><span class="line"><span class="cl">            <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;下载文件：</span><span class="si">%s</span><span class="s1">&#39;</span> <span class="o">%</span> <span class="n">pdf_name</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="n">path</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">directory</span><span class="p">,</span><span class="n">pdf_name</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="n">content</span> <span class="o">=</span> <span class="n">extract_pdf</span><span class="p">(</span><span class="n">path</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">except</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;下载文件失败&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="n">content</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span>
</span></span><span class="line"><span class="cl">        <span class="n">row</span><span class="p">[</span><span class="s1">&#39;content&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">content</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># 传数据库,如果不用数据库可以注释掉</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># upload_mysql(connect,cursor,row,table_name)</span></span></span></code></pre></div>
<p>由于解析的 PDF 文字很多，直接输出成 Excel 会串行，所以我是在第 4 步<code>保存数据</code>的时候，</p>
<p>把数据保存在数据库中，然后把数据库的表导出成 Excel 。</p>
<figure>
</figure>

<p>为了让读者能执行代码，我把上传数据库的代码注释了，但是解析的<code>content</code>你就看不到。</p>
<p>如果你会 mysql 数据库，可以把取消注释代码。</p>
<p>如果你想查询其它的关键词，下载 PDF ，可以修改这行代码的关键词：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">infos</span> <span class="o">=</span> <span class="n">get_download_urls</span><span class="p">(</span><span class="s1">&#39;警示函&#39;</span><span class="p">)</span></span></span></code></pre></div>
<h2 id="文件信息及pdf下载">文件信息及PDF下载</h2>
<p>我把下载好的信息和 PDF 也打包分享大家，有需要的可以直接下载：</p>
<p><a href="https://pan.baidu.com/s/1tTErvLvPgo0R30WTP9nUvA?pwd=k3sr" target="_blank" rel="noopener noreffer ">https://pan.baidu.com/s/1tTErvLvPgo0R30WTP9nUvA?pwd=k3sr</a></p>
]]></description>
</item>
<item>
    <title>我浪费了很多时间</title>
    <link>https://nigo81.github.io/posts/20220813233123-%E6%88%91%E6%B5%AA%E8%B4%B9%E4%BA%86%E5%BE%88%E5%A4%9A%E6%97%B6%E9%97%B4/</link>
    <pubDate>Sat, 13 Aug 2022 00:00:00 &#43;0000</pubDate>
    <author>nigo</author>
    <guid>https://nigo81.github.io/posts/20220813233123-%E6%88%91%E6%B5%AA%E8%B4%B9%E4%BA%86%E5%BE%88%E5%A4%9A%E6%97%B6%E9%97%B4/</guid>
    <description><![CDATA[<p>前面在所里的时候，一位经理问我一些效率工具使用的问题。</p>
<p>我把以前做的东西告诉了她大概怎么使用的，然后给她了一个以前整理过的链接，让她自己去看。</p>
<p>聊到最后，我就说搞这些就是浪费自己时间，方便别人，而且还不能升职。</p>
<p>她也点点头，认同这个事实。</p>
<p>当时初、中级的时候就学了很多这些，也做了很多工具，当然完全是为了方便我自己不去做重复的工作，这是一个理念的问题。</p>
<p>以前那种 VBA 工具，我现在一个都没有去做了。不是因为我理念变了，或者说正常工作多了，而是我完全没有这些需求，我做它干嘛？</p>
<p>我折腾的都是自己工作上用得上的东西，能帮助我不做重复工作的事。</p>
<p>只是每个时间段，学的东西不一样。</p>
<p>我仍然还是每天浪费了很多时间在学东西上面。</p>
<p>最近我从 vim 编辑器转到了 emacs 编辑器上面，</p>
<p>一个是编辑器之神，一个是神之编辑器。很多时候就是纯粹浪费时间。</p>
<p>但这种浪费时间，对于我来说是娱乐的，类似于喜欢打游戏的人的一样，一种消遣方式。</p>
<p>比如，上周有同事，让我把上交所的警示函给她找出来。</p>
<figure>
</figure>

<p>网站上是 pdf 文件。</p>
<figure>
</figure>

<p>由于我以前浪费过时间折腾过 python ，所以也就帮忙写了个爬虫批量把 PDF 下载下来，然后读取 PDF 的内容，整理成 Excel 。</p>
<p>最后发给她所有信息，以及打包的 PDF 文件。</p>
<figure>
</figure>

<p>不过我好像自己又浪费了几个小时时间。</p>
]]></description>
</item>
</channel>
</rss>
